name: Windows Release

on:
  push:
    branches:
      - 'continuous-integration'
    tags:
      - 'v*'
  pull_request:
    branches:
    - 'continuous-integration'

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   6.5.1
  PROGRAM:      machine_sim

jobs:
  build:
    runs-on:  windows-2019

    steps:
      - name: (1) Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: (2) Get all tags for correct version determination
        working-directory:  ${{ github.workspace }}
        run: |
          git fetch --all --tags -f

      - name: (3) Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: (4) Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          host:         windows
          target:       desktop
          arch:         win64_msvc2019_64
          dir:          ${{ runner.temp }}
          modules:      qtcharts qtwebsockets # mqtt printsupport
          cache:        true
          setup-python: false

      - name: (5) Clone QTMQTT
        working-directory: ${{ runner.temp }}
        run: |
             git clone https://github.com/qt/qtmqtt.git
             cd qtmqtt
             git checkout v${{ env.QT_VERSION }}


      - name: (6) Configure and Build QTMQTT
        working-directory: ${{ runner.temp }}/qtmqtt
        run: |
            cmake.exe -B build -DCMAKE_GENERATOR=Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=\a\_temp\Qt\6.5.1\msvc2019_64 -DCMAKE_CXX_FLAGS_INIT=
             cmake --build build -j4
             dir build\bin
             cmake --install build

      - name: (7) Configure and build
        working-directory: ${{ env.SOURCE_DIR }}
        run:  |
              mkdir ${{ env.SOURCE_DIR }}\build
              cmake.exe -B build -DCMAKE_GENERATOR:STRING=Ninja -DCMAKE_BUILD_TYPE:STRING=Release "-DCMAKE_PREFIX_PATH:PATH=\a\_temp\Qt\6.5.1\msvc2019_64" "-DCMAKE_CXX_FLAGS_INIT:STRING="
              cmake --build build

      - name: (8) Package
        working-directory: ${{ env.SOURCE_DIR }}
        run: |
              mkdir -p deploy\${{ env.PROGRAM }}
              cp build\${{ env.PROGRAM }}.exe deploy\${{ env.PROGRAM }}
              cd deploy\${{ env.PROGRAM }}
              windeployqt --qmldir ${{ env.SOURCE_DIR }} ${{ env.PROGRAM }}.exe --pdb --release --compiler-runtime --no-translations
              copy C:\Windows\System32\concrt140.dll . 
              copy C:\Windows\System32\vccorlib140.dll .
              copy C:\Windows\System32\msvcp140.dll .
              copy C:\Windows\System32\vcruntime140.dll .

      - name: (9) Make zip
        working-directory: ${{ env.SOURCE_DIR }}
        run: 7z a ${{ env.PROGRAM }}.zip deploy\*
              
      - name: (10) Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Latest Release
          files: ${{ env.SOURCE_DIR }}\${{ env.PROGRAM }}.zip





        
